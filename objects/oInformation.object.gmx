<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sInformation</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set draw
draw_set_font(font0);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
depth = 0;
visible = false;
runepressed = false;
backpressed = false;
skillpressed = false;
page2pressed = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// clear the pressed
backpressed = false;
runepressed = false;
page2pressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///back key &amp;&amp; learn skills

if (visible) {
    //back from help(pick rune) to main menu
    if (backpressed &amp;&amp; scr_area_at(BACK)) {
        visible = false;
        with(oButton) {
            visible = true;
        }
    }
    if (page2pressed &amp;&amp; scr_area_at(PAGE2)) {
        depth = -12;
    }
    
    
    
    //go to begin page
    var runearea = (scr_area_at(FEN) || scr_area_at(PAN) || scr_area_at(NU));
    if (runepressed &amp;&amp; depth == -18 &amp;&amp; runearea) {
        visible = false;
                
        with(oButton) {
            depth = -21;
            // begin the game at depth -21
            visible = true;
            oControl.canBack = true;
        }
        // pick the rune
        if (scr_area_at(FEN)) {
            global.rune = 1;
            scr_fen();
            // 1: 焚
        }
        if (scr_area_at(PAN)) {
            global.rune = 2;
            scr_pan();
            // 2: 磐
        }
        if (scr_area_at(NU)) {
            global.rune = 3;
            scr_nu();
            // 3: 怒
        }
    }
    
    //learn skills
    var skillarea = (scr_area_at(SKILL0) || scr_area_at(SKILL1) || scr_area_at(SKILL2) || scr_area_at(SKILL3))
    if (skillpressed &amp;&amp; depth == -16 &amp;&amp; skillarea) {
        with(oHero) {
            if (scr_area_at(SKILL0) &amp;&amp; movepoint &gt;= critchance_mp &amp;&amp; critchanceflag){
                critchance_lv += 1;
                critchance += addcritchance;
                movepoint -= critchance_mp;
                critchanceflag = false;
            }
            if (scr_area_at(SKILL1) &amp;&amp; movepoint &gt;= lifeleech_mp &amp;&amp; lifeleechflag){
                lifeleech_lv += 1;
                lifeleech += addlifeleech;
                movepoint -= lifeleech_mp;
                lifeleechflag = false;
            }
            if (scr_area_at(SKILL2) &amp;&amp; movepoint &gt;= dealperhp_mp &amp;&amp; dealperhpflag){
                dealperhp_lv += 1;
                dealperhp += adddealperhp;
                movepoint -= dealperhp_mp;
                dealperhpflag = false;
            }
            if (scr_area_at(SKILL3) &amp;&amp; movepoint &gt;= dashreduce_mp &amp;&amp; dashreduceflag &amp;&amp; dashreduceeffect  &lt; updashreduce){
                dashreduce_lv += 1;
                dashreduceeffect = min(updashreduce,dashreduceeffect+dashreduce);
                dashcost = DASH_COST - dashreduceeffect;
                movepoint -= dashreduce_mp;
                dashreduceflag = false;
            }
        }
    }
    if (skillpressed &amp;&amp; depth == -12 &amp;&amp; skillarea) {
        with(oHero) {
            if (scr_area_at(SKILL0) &amp;&amp; movepoint &gt;= phase_mp &amp;&amp; phaseflag){
                phase_lv += 1;
                phasetime += addphase;
                movepoint -= phase_mp;
                phaseflag = false;
                canphase = true;
            }
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// right position

//back area
//var backarea = scr_area(576,320,64,32);
var backarea = scr_area_at(BACK);
if (backarea &amp;&amp; oControl.canBack) {
    backpressed = true;
}

//rune area
var runearea = (scr_area_at(FEN) || scr_area_at(PAN) || scr_area_at(NU));
if (runearea) {
    runepressed = true;
}

//skill area
var skillarea = (scr_area_at(SKILL0) || scr_area_at(SKILL1) || scr_area_at(SKILL2) || scr_area_at(SKILL3));
if (skillarea) {
    skillpressed = true;
}

if (depth == -16) {
    page2area = scr_area_at(PAGE2);
    if (page2area) {
        page2pressed = true;
    }
}

if (depth == -19 &amp;&amp; scr_area_at(WEB)) {
    url_open(oControl.website);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the information

// set draw
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    if (oControl.canBack) {
        draw_set_colour(c_red);
        draw_button(576-32,320-16,576+32,320+16,!(mouse_check_button(mb_left) &amp;&amp; scr_area_at(BACK)));
        draw_set_colour(c_black);
        draw_text(576,320,"返回");
    }

switch(depth) { 
// draw by depth
    case -19:
        //help
        scr_draw_help();
        break;
    
    // draw pick rune information
    case -18:
        // select rune
        scr_draw_rune();
        break;
    
    case -17:
        // show hero stats
        scr_draw_herostats();
        break;
    
    case -16:
        // show skills list
        scr_draw_skills();
        break;
    
    case -12:
        scr_draw_skills_2();    
        break;
        
    case -15:   // show wait for client
        scr_draw_wait();
        break;
       
    case -14:   // show wait for other
        scr_draw_wait_other();
        break;
    
    case -13:
        scr_draw_trueip();
        break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>320,320</point>
  </PhysicsShapePoints>
</object>
