<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sHeroDown</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>oParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Fixed Rotation
event_inherited();

vspd = 0;
hspd = 0;
xaxis = 0; // X轴方向，水平(h)
yaxis = 0; // Y轴方向，垂直(v)
len = 0;
dir = 0;
attacked = false;
image_speed = 0; // 人物静止帧数

isdash = false;
isattack = false;
state = scr_move_state;
face = DOWN;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Herostats
/// hero stats
// font0
draw_set_font(font0);

//hero stats
name = "↓";

//globalvar
globalvar rune, r, lflag;
rune = 0;
r = 1;
lflag = true;

//misc

level = 0;
xp = 0;
maxxp = 4;

spd = 3;// 移动速度

maxstamina = 10;
stamina = maxstamina;
dashcost = 5;

maxmovepoint = r;
movepoint = maxmovepoint;
//life

maxhp = 500;
addhp = 50;
hp = maxhp;
temphp = hp;

lifeleech = 0;
liferecovery = 0;

defense = 10;
adddefense = 1;

//attack
attack = 20;
addattack = 2;
truedamage = attack;

//accuracy = 1;

critchance = 5 ;
critdamage = 200;
crit = false;


knockback = 20;


// skill list
scr_skill_list();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set key
isandroid = ISANDROID;
if (isandroid) {
    winheight = 0;
    winwidth = 0;
    windx = 0;
    winleftx = 0;
    winlefty = 0;
    winrightx = 0;
    winrighty = 0;
    winupx = 0;
    winupy = 0;
    windownx = 0;
    windowny = 0;
    winatkx = 0;
    winatky = 0;
    windashx = 0;
    windashy = 0;
    winleft = 0;
    winright = 0;
    winup = 0;
    windown = 0;
    winatk = 0;
    windash = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// recovery
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// back to move state
isdash = false;
state = scr_move_state;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the player
if (global.pause) exit;


event_inherited();
if (room == atk01 || room == atk02) {
script_execute(state);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// recovery
/// recovery
if (global.pause) exit;

if (room == atk01 || room == atk02) {
    if (stamina &lt; maxstamina &amp;&amp; alarm[1] &lt;= 0) {
        stamina = min(stamina+1,maxstamina);
        alarm[1] = room_speed / 3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// send hp
if (hp &gt; temphp) {
    if (instance_exists(oClient)) {
        with (oClient) {
            scr_send_recovery_hp(oHero.hp,server);
        }
    }
    if (instance_exists(oServer)) {
        with (oServer) {
            scr_send_recovery_hp(oHero.hp,client);
        }
    }
    temphp = hp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// back to move state
if (state == scr_attack_state &amp;&amp; attacked == true) {
    state = scr_move_state;
    attacked = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_fixed_rotation = true; 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isandroid &amp;&amp; room != r0) {
//winheight = 100;
//winwidth = 100;
winheight = window_get_height();
winwidth = window_get_width();
windx = winheight/10;

winleftx = windx * 1;
winlefty = windx * 5.5;

winrightx = winleftx + windx * 3;
winrighty = winlefty;
winupx = winleftx + windx * 1.5;
winupy = winlefty - windx * 1.5;
windownx = winleftx + windx * 1.5;
windowny = winlefty + windx * 1.5;
winatkx = winheight - winleftx + 6 * windx ;
winatky = winlefty;
windashx = winheight - winrightx + 6 * windx ;
windashy = winlefty;
scale = windx*2/64;
winleft = virtual_key_add(winleftx,winlefty,2*windx,2*windx,vk_left);
winright = virtual_key_add(winrightx,winrighty,2*windx,2*windx,vk_right);
winup = virtual_key_add(winupx,winupy,2*windx,2*windx,vk_up);
windown = virtual_key_add(windownx,windowny,2*windx,2*windx,vk_down);


winatk = virtual_key_add(windashx,windashy,2*windx,2*windx,ord('Z'));

windash = virtual_key_add(winatkx,winatky,2*windx,2*windx,ord('X'));

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw stats
if (room == atk01 || room == atk02) {
    draw_set_halign(fa_left);
    draw_text(20,20,"当前回合：" + string(r));
    switch(global.rune) {
        case 1: draw_text(20,40,"符文：焚");break;
        case 2: draw_text(20,40,"符文：磐");break;
        case 3: draw_text(20,40,"符文：怒");break;
    }
    draw_text(20,60,"等级：  " + string(level) + "(" + string(xp) + "/" + string(maxxp) + ")");
    draw_text(20,80,"生命值：" + string(hp) + "/" + string(maxhp));
    draw_text(20,100,"耐力：" + string(stamina) + "/" + string(maxstamina));
    draw_text(20,120,"攻击力：" + string(attack));
    draw_text(20,140,"防御力：" + string(defense));
    if (isandroid) {
        draw_sprite_ext( sKey, 0, winleftx, winlefty, scale, scale, 0, c_white, .25 );
        draw_sprite_ext( sKey, 1, winupx, winupy, scale, scale, 0, c_white, .25 );
        draw_sprite_ext( sKey, 2, winrightx, winrighty, scale, scale, 0, c_white, .25 );
        draw_sprite_ext( sKey, 3, windownx, windowny, scale, scale, 0, c_white, .25 );
        draw_sprite_ext( sKey, 4, windashx, windashy, scale, scale, 0, c_white, .25 );
        draw_sprite_ext( sKey, 5, winatkx, winatky, scale, scale, 0, c_white, .25 );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the shadow &amp; stats
event_inherited();
draw_sprite(sShadow,image_index,x,y);
draw_set_halign(fa_center);
draw_set_font(font1);
draw_text(x,y-22,name);
draw_set_font(font0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,12</point>
    <point>14,12</point>
    <point>14,20</point>
    <point>0,20</point>
  </PhysicsShapePoints>
</object>
